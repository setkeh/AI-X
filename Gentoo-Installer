#!/bin/bash
# GENTOO INSTALL SCRIPT FROM BASE INSTALL AND DEFAULT CONFIGS
# Based on: Morpheus (YYC)
# Written by: Setkeh

# Display Introduction
echo "Welcome to the GENTOO install script, please note you must be at your system for instructions"
echo "this script will perform a majority of the configurations for you however certain interaction"
echo "may be required on your part."
echo
echo
echo "NOTE: THIS WILL RESULT IN DATA LOSS OF THE CURRENT DRIVE"
echo "Please press enter when your ready to continue."
read

# Configure hard disk
echo "The following is a list of found Hard Disk devices (sd*/hd*):"
ls /dev/ | grep -E [s:h]d[a-z]$
echo
echo "Please enter the device you would like to install to:"
read HD_DEVICE
HDD="/dev/${HD_DEVICE}"

# warn user last time
echo
echo "THIS IS YOUR LAST CHANCE TO CANCEL, Press CTRL+C to cancel this install or ENTER to continue"
read
echo "p" | fdisk $HDD
#echo "Please specifiy the total Size of the Drive:"
#read SIZE 

#TODO: add integer checking
echo -n "Generating fdisk operation file"
# Create fdisc auto file
#((i = 1))
#while (( i < PARTS ))
#do
#echo "d" >> fdisc.in
#echo "$i" >> fdisc.in
#((i += 1))
#done
echo "d" > fdisc.in	# Delete last sector
echo "n" >> fdisc.in# New Partiton
echo "p" >>				 fdisc.in# Primary
echo "1" >> fdisc.in# Partion 1
echo "" >> fdisc				.in# default
echo ""         >> fdisc.in     # default
#echo "+$SIZE" 	  >> fdisc.in
echo "a" >> fdisc.in# Set flag
echo "1" >> fdisc.in# 				bootable
echo "t"        >> fdisc.in     # Set type
echo "8e"       >> fdisc.in     # 8e = LVM
#echo -n "."
#echo "n" >> fdisc.in# New Partio		n
#echo "p" >> fdisc.in# Primary
#echo "2" >> fdisc.in# Partion 2
#				echo "" >> fdisc.in# default
#echo "+512M" >> fdisc.in# 512 MB size				
#echo "t" >> fdisc.in# Set partition type
#echo "2" >> fdisc.in# P				artition 2
#echo "82" >> fdisc.in# 82 = SWAP
#echo -n "."
#echo "n" 			>> fdisc.in# New Partition
#echo "p" >> fdisc.in# Primary
#echo "3" 			>> fdisc.in# Partition 2
#echo "" >> fdisc.in# default
#echo "" >>					 fdisc.in# new Line
#echo -n "."
echo "w" >> fdisc.in# Write partion			 table
echo "q" >> fdisc.in# Quit
echo ". Done"
# Execute file
echo "		Executing fdisk script ..."
echo
fdisk $HDD < fdisc.in
#clean up
rm -f fdisc.in
echo ""
echo "Partions created"
echo "Creating LVM Volume Group and Partitions"
pvcreate /dev/${HD_DEVICE}1
echo "Please Select a Name for you Volume Group"
read VG_NAME
vgcreate ${VG_NAME} /dev/${HD_DEVICE}1
lvcreate -L 100M ${VG_NAME} -n boot
echo "Please Enter a Size for root and home partitions *this can be changed later*"
echo "Example: 10G for 10 Gigabytes 100M for 100 MegaBytes"
read RH_SIZE
lvcreate -L ${RH_SIZE} ${VG_NAME} -n home
lvcreate -L ${RH_SIZE} ${VG_NAME} -n root
echo "Creating Swap"
lvcreate -C y -L 256M ${VG_NAME} -n swap
echo "Displaying LVM Layout Press Enter to Continue"
read
lvdisplay
echo "Press Enter to Continue"
read
echo "Now creating Partition tables to the Logical Volumes"
mkfs.ext2 /dev/mapper/${VG_NAME}-boot
mkfs.ext4 /dev/mapper/${VG_NAME}-root
mkfs.ext4 /dev/mapper/${VG_NAME}-home
mkswap /dev/mapper/${VG_NAME}-swap
echo "Partitioning Complete"
echo "Activating swap partition"
swapon /dev/mapper/${VG_NAME}-swap
echo "Swap Activated"
echo ""
echo "Mounting partitions"
mkdir /mnt/gentoo
mount /dev/mapper/${VG_NAME}-root /mnt/gentoo
mkdir /mnt/gentoo/boot
mount /dev/mapper/${VG_NAME}-boot /mnt/gentoo/boot
mkdir /mnt/gentoo/home
mount /dev/mapper/${VG_NAME}-home /mnt/gentoo/home
echo "Mount Points Mounted"
echo ""
echo "Starting STAGE 3 Install"
echo ""
cd /mnt/gentoo
#wget http://distfiles.gentoo.org/releases/amd64/autobuilds/current-stage3/stage3-amd64-20120621.tar.bz2 
wget http://distfiles.gentoo.org/releases/x86/autobuilds/current-stage3/stage3-i686-20120911.tar.bz2
tar xvjpf stage3-*.tar.bz2
echo ""
echo "Installing portage..."
cd /mnt/gentoo
wget http://gentoo.osuosl.org/snapshots/portage-latest.tar.bz2
tar xvjf /mnt/gentoo/portage-latest.tar.bz2 -C /mnt/gentoo/usr
echo "Cleaning up..."
rm -f portage-latest.tar.bz2
rm -f stage3-x86-2006.1.tar.bz2
echo ""
echo "Getting ready to CHROOT"
cp -L /etc/resolv.conf /mnt/gentoo/etc/resolv.conf
mount -t proc none /mnt/gentoo/proc
mount -o bind /dev /mnt/gentoo/dev
mount -o bind /sys /mnt/gentoo/sys
echo "Chrooted"
echo "Updating portage..."
sleep 2
chroot /mnt/gentoo emerge --sync
echo "Patching portage..."
chroot /mnt/gentoo emerge portage
echo "Portage updated, downloading kernel source..."
sleep 2

echo "#!/bin/bash" > /mnt/gentoo/portage
echo 'USE="-doc symlink" emerge gentoo-sources' >> /mnt/gentoo/portage
chmod 700 /mnt/gentoo/portage
chroot /mnt/gentoo ./portage
rm -f /mnt/gentoo/portage

echo "#!/bin/bash" > /mnt/gentoo/portage
echo 'cd /usr/src/linux' >> /mnt/gentoo/portage
echo 'echo ""' >> /mnt/gentoo/portage
echo 'echo "***************************************************"' >> /mnt/gentoo/portage
echo 'echo "**            KERNEL CONFIGURATION               **"' >> /mnt/gentoo/portage
echo 'echo "***************************************************"' >> /mnt/gentoo/portage
echo 'echo "* You will now be prompted with the linux kernel  *"' >> /mnt/gentoo/portage
echo 'echo "*menu configurator, please ensure that you specify*"' >> /mnt/gentoo/portage
echo 'echo "*the right settings, as once you exit this script *"' >> /mnt/gentoo/portage
echo 'echo "*will compile and install the new kernel          *"' >> /mnt/gentoo/portage
echo 'echo "***************************************************"' >> /mnt/gentoo/portage
echo 'echo ""' >> /mnt/gentoo/portage
echo 'echo "Please press enter to continue"' >> /mnt/gentoo/portage
echo 'read' >> /mnt/gentoo/portage
echo 'make menuconfig' >> /mnt/gentoo/portage
echo 'make && make modules_install' >> /mnt/gentoo/portage
echo 'cp arch/i386/boot/bzImage /boot/originalKernel' >> /mnt/gentoo/portage
echo 'echo ""' >> /mnt/gentoo/portage
chmod 700 /mnt/gentoo/portage
chroot /mnt/gentoo ./portage
rm -f /mnt/gentoo/portage

echo "Generating FSTAB"
#GENERATE FSTAB
echo "# /etc/fstab: static file system information." > /mnt/gentoo/etc/fstab
echo "#" >> /mnt/gentoo/etc/fstab
echo "# noatime turns off atimes for increased performance (atimes normally aren't" >> /mnt/gentoo/etc/fstab
echo "# needed; notail increases performance of ReiserFS (at the expense of storage" >> /mnt/gentoo/etc/fstab
echo "# efficiency).  It's safe to drop the noatime options if you want and to" >> /mnt/gentoo/etc/fstab
echo "# switch between notail / tail freely." >> /mnt/gentoo/etc/fstab
echo "#" >> /mnt/gentoo/etc/fstab
echo "# The root filesystem should have a pass number of either 0 or 1." >> /mnt/gentoo/etc/fstab
echo "# All other filesystems should have a pass number of 0 or greater than 1." >> /mnt/gentoo/etc/fstab
echo "#" >> /mnt/gentoo/etc/fstab
echo "# See the manpage fstab(5) for more information." >> /mnt/gentoo/etc/fstab
echo "#" >> /mnt/gentoo/etc/fstab
echo "" >> /mnt/gentoo/etc/fstab
echo "# <fs>                             <mountpoint>    <type>          <opts>          <dump/pass>" >> /mnt/gentoo/etc/fstab
echo "" >> /mnt/gentoo/etc/fstab
echo "# NOTE: If your BOOT partition is ReiserFS, add the notail option to opts." >> /mnt/gentoo/etc/fstab
echo "/dev/mapper/${VG_NAME}-boot               /boot           ext2            noauto,noatime  1 2" >> /mnt/gentoo/etc/fstab
echo "/dev/mapper/${VG_NAME}-root               /               ext4            noatime         0 1" >> /mnt/gentoo/etc/fstab
echo "/dev/mapper/${VG_NAME}-home               /home           ext4            noatime         0 1" >> /mnt/gentoo/etc/fstab
echo "/dev/mapper/${VG_NAME}-swap               none            swap            sw              0 0" >> /mnt/gentoo/etc/fstab
echo "#/dev/cdroms/cdrom0      /mnt/cdrom      iso9660         noauto,ro       0 0" >> /mnt/gentoo/etc/fstab
echo "#/dev/fd0               /mnt/floppy     auto            noauto          0 0" >> /mnt/gentoo/etc/fstab
echo "" >> /mnt/gentoo/etc/fstab
echo "# NOTE: The next line is critical for boot!" >> /mnt/gentoo/etc/fstab
echo "proc                    /proc           proc            defaults        0 0" >> /mnt/gentoo/etc/fstab
echo "" >> /mnt/gentoo/etc/fstab
echo "# glibc 2.2 and above expects tmpfs to be mounted at /dev/shm for" >> /mnt/gentoo/etc/fstab
echo "# POSIX shared memory (shm_open, shm_unlink)." >> /mnt/gentoo/etc/fstab
echo "# (tmpfs is a dynamically expandable/shrinkable ramdisk, and will" >> /mnt/gentoo/etc/fstab
echo "#  use almost no memory if not populated with files)" >> /mnt/gentoo/etc/fstab
echo "shm                     /dev/shm        tmpfs           nodev,nosuid,noexec     0 0" >> /mnt/gentoo/etc/fstab
cat /mnt/gentoo/etc/fstab
echo ""
echo "Configuring rc scripts"
chroot /mnt/gentoo rc-update add net.eth0 default
chroot /mnt/gentoo rc-update add sshd default
echo "*************** ROOT PASSWORD ********************"
echo "YOU ARE NOW REQUIRED TO ENTER A NEW ROOT PASSWORD "
echo "**************************************************"
chroot /mnt/gentoo passwd
echo "Installing tools..."
chroot /mnt/gentoo emerge syslog-ng vixie-cron dhcpcd
chroot /mnt/gentoo rc-update add syslog-ng default
chroot /mnt/gentoo rc-update add vixie-cron
echo ""
echo ""
echo "Installing Grub"
touch /mnt/gentoo/etc/portage/package.accept_keywords
echo "sys-boot/grub:2 **" >> /mnt/gentoo/etc/portage/package.accept_keywords
chroot /mnt/gentoo emerge sys-boot/grub:2
chroot /mnt/gentoo grub2-mkconfig -o /boot/grub2/grub.cfg
chroot /mnt/gentoo grub2-install --no-floppy /dev/${HD_DEVICE}
cd /
umount /mnt/gentoo/boot /mnt/gentoo/dev /mnt/gentoo/proc /mnt/gentoo
echo "Done"
echo "****************************"
echo "****************************"
echo "** SYSTEM WILL NOW REBOOT **"
echo "****************************"
echo "****************************"
sleep 5
#reboot
